// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.App.Bsky.Actor
{
    /// <summary>
    /// A word that the account owner has muted.
    /// </summary>
    public partial class MutedWord : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="MutedWord"/> class.
        /// </summary>
        public MutedWord(string? id = default, string? value = default, List<string>? targets = default, string? actorTarget = default, DateTime? expiresAt = default)
        {
            this.Id = id;
            this.Value = value;
            this.Targets = targets;
            this.ActorTarget = actorTarget;
            this.ExpiresAt = expiresAt;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="MutedWord"/> class.
        /// </summary>
        public MutedWord()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="MutedWord"/> class.
        /// </summary>
        public MutedWord(CBORObject obj)
        {
            if (obj["id"] is not null) this.Id = obj["id"].AsString();
            if (obj["value"] is not null) this.Value = obj["value"].AsString();
            if (obj["targets"] is not null) this.Targets = obj["targets"].Values.Select(n =>n.AsString()).ToList();
            // enum
            if (obj["expiresAt"] is not null) this.ExpiresAt = obj["expiresAt"].ToDateTime();
        }

        [JsonPropertyName("id")]
        public string? Id { get; set; }

        /// <summary>
        /// The muted word itself.
        /// </summary>
        [JsonPropertyName("value")]
        [JsonRequired]
        public string? Value { get; set; }

        /// <summary>
        /// The intended targets of the muted word.
        /// </summary>
        [JsonPropertyName("targets")]
        [JsonRequired]
        public List<string>? Targets { get; set; }

        /// <summary>
        /// Groups of users to apply the muted word to. If undefined, applies to all users.
        /// </summary>
        [JsonPropertyName("actorTarget")]
        public string? ActorTarget { get; set; } = "all";

        /// <summary>
        /// The date and time at which the muted word will expire and no longer be applied.
        /// </summary>
        [JsonPropertyName("expiresAt")]
        public DateTime? ExpiresAt { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "app.bsky.actor.defs#mutedWord";

        public const string RecordType = "app.bsky.actor.defs#mutedWord";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<App.Bsky.Actor.MutedWord>(this, (JsonTypeInfo<App.Bsky.Actor.MutedWord>)SourceGenerationContext.Default.AppBskyActorMutedWord)!;
        }

        public static MutedWord FromJson(string json)
        {
            return JsonSerializer.Deserialize<App.Bsky.Actor.MutedWord>(json, (JsonTypeInfo<App.Bsky.Actor.MutedWord>)SourceGenerationContext.Default.AppBskyActorMutedWord)!;
        }
    }
}

