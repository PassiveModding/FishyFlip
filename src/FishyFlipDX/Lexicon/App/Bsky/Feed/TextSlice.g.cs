// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.App.Bsky.Feed
{
    /// <summary>
    /// Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.
    /// </summary>
    public partial class TextSlice : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="TextSlice"/> class.
        /// </summary>
        /// <param name="start"></param>
        /// <param name="end"></param>
        public TextSlice(long? start = default, long? end = default)
        {
            this.Start = start;
            this.End = end;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="TextSlice"/> class.
        /// </summary>
        public TextSlice()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="TextSlice"/> class.
        /// </summary>
        public TextSlice(CBORObject obj)
        {
            if (obj["start"] is not null) this.Start = obj["start"].AsInt64Value();
            if (obj["end"] is not null) this.End = obj["end"].AsInt64Value();
        }

        /// <summary>
        /// Gets or sets the start.
        /// </summary>
        [JsonPropertyName("start")]
        [JsonRequired]
        public long? Start { get; set; }

        /// <summary>
        /// Gets or sets the end.
        /// </summary>
        [JsonPropertyName("end")]
        [JsonRequired]
        public long? End { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "app.bsky.feed.post#textSlice";

        public const string RecordType = "app.bsky.feed.post#textSlice";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<App.Bsky.Feed.TextSlice>(this, (JsonTypeInfo<App.Bsky.Feed.TextSlice>)SourceGenerationContext.Default.AppBskyFeedTextSlice)!;
        }

        public static TextSlice FromJson(string json)
        {
            return JsonSerializer.Deserialize<App.Bsky.Feed.TextSlice>(json, (JsonTypeInfo<App.Bsky.Feed.TextSlice>)SourceGenerationContext.Default.AppBskyFeedTextSlice)!;
        }
    }
}

