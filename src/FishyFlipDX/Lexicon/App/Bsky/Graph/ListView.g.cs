// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.App.Bsky.Graph
{
    public partial class ListView : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ListView"/> class.
        /// </summary>
        public ListView()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ListView"/> class.
        /// </summary>
        public ListView(CBORObject obj)
        {
            if (obj["uri"] is not null) this.Uri = obj["uri"].ToATUri();
            if (obj["cid"] is not null) this.Cid = obj["cid"].AsString();
            if (obj["creator"] is not null) this.Creator = new App.Bsky.Actor.ProfileView(obj["creator"]);
            if (obj["name"] is not null) this.Name = obj["name"].AsString();
            if (obj["purpose"] is not null) this.Purpose = obj["purpose"].AsString();
            if (obj["description"] is not null) this.Description = obj["description"].AsString();
            if (obj["descriptionFacets"] is not null) this.DescriptionFacets = obj["descriptionFacets"].Values.Select(n =>new App.Bsky.Richtext.Facet(n)).ToList();
            if (obj["avatar"] is not null) this.Avatar = obj["avatar"].AsString();
            if (obj["listItemCount"] is not null) this.ListItemCount = obj["listItemCount"].AsInt64Value();
            if (obj["labels"] is not null) this.Labels = obj["labels"].Values.Select(n =>new Com.Atproto.Label.Label(n)).ToList();
            if (obj["viewer"] is not null) this.Viewer = new App.Bsky.Graph.ListViewerState(obj["viewer"]);
            if (obj["indexedAt"] is not null) this.IndexedAt = obj["indexedAt"].ToDateTime();
        }

        [JsonPropertyName("uri")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATUriJsonConverter))]
        public FishyFlip.Models.ATUri? Uri { get; set; }

        [JsonPropertyName("cid")]
        [JsonRequired]
        public string? Cid { get; set; }

        [JsonPropertyName("creator")]
        [JsonRequired]
        public App.Bsky.Actor.ProfileView? Creator { get; set; }

        [JsonPropertyName("name")]
        [JsonRequired]
        public string? Name { get; set; }

        [JsonPropertyName("purpose")]
        [JsonRequired]
        public string? Purpose { get; set; }

        [JsonPropertyName("description")]
        public string? Description { get; set; }

        [JsonPropertyName("descriptionFacets")]
        public List<App.Bsky.Richtext.Facet>? DescriptionFacets { get; set; }

        [JsonPropertyName("avatar")]
        public string? Avatar { get; set; }

        [JsonPropertyName("listItemCount")]
        public long? ListItemCount { get; set; }

        [JsonPropertyName("labels")]
        public List<Com.Atproto.Label.Label>? Labels { get; set; }

        [JsonPropertyName("viewer")]
        public App.Bsky.Graph.ListViewerState? Viewer { get; set; }

        [JsonPropertyName("indexedAt")]
        [JsonRequired]
        public DateTime? IndexedAt { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "app.bsky.graph.defs#listView";

        public const string RecordType = "app.bsky.graph.defs#listView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<App.Bsky.Graph.ListView>(this, (JsonTypeInfo<App.Bsky.Graph.ListView>)SourceGenerationContext.Default.AppBskyGraphListView)!;
        }

        public static ListView FromJson(string json)
        {
            return JsonSerializer.Deserialize<App.Bsky.Graph.ListView>(json, (JsonTypeInfo<App.Bsky.Graph.ListView>)SourceGenerationContext.Default.AppBskyGraphListView)!;
        }
    }
}

