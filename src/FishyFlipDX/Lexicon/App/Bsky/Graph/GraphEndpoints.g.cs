// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.App.Bsky.Graph
{

    /// <summary>
    /// app.bsky.graph Endpoint Group.
    /// </summary>
    public static class GraphEndpoints
    {

       public const string GetActorStarterPacks = "/xrpc/app.bsky.graph.getActorStarterPacks";

       public const string GetBlocks = "/xrpc/app.bsky.graph.getBlocks";

       public const string GetFollowers = "/xrpc/app.bsky.graph.getFollowers";

       public const string GetFollows = "/xrpc/app.bsky.graph.getFollows";

       public const string GetKnownFollowers = "/xrpc/app.bsky.graph.getKnownFollowers";

       public const string GetList = "/xrpc/app.bsky.graph.getList";

       public const string GetListBlocks = "/xrpc/app.bsky.graph.getListBlocks";

       public const string GetListMutes = "/xrpc/app.bsky.graph.getListMutes";

       public const string GetLists = "/xrpc/app.bsky.graph.getLists";

       public const string GetMutes = "/xrpc/app.bsky.graph.getMutes";

       public const string GetRelationships = "/xrpc/app.bsky.graph.getRelationships";

       public const string GetStarterPack = "/xrpc/app.bsky.graph.getStarterPack";

       public const string GetStarterPacks = "/xrpc/app.bsky.graph.getStarterPacks";

       public const string GetSuggestedFollowsByActor = "/xrpc/app.bsky.graph.getSuggestedFollowsByActor";

       public const string MuteActor = "/xrpc/app.bsky.graph.muteActor";

       public const string MuteActorList = "/xrpc/app.bsky.graph.muteActorList";

       public const string MuteThread = "/xrpc/app.bsky.graph.muteThread";

       public const string UnmuteActor = "/xrpc/app.bsky.graph.unmuteActor";

       public const string UnmuteActorList = "/xrpc/app.bsky.graph.unmuteActorList";

       public const string UnmuteThread = "/xrpc/app.bsky.graph.unmuteThread";


        /// <summary>
        /// Get a list of starter packs created by the actor.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetActorStarterPacksOutput>> GetActorStarterPacksAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier actor, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Enumerates which accounts the requesting account is currently blocking. Requires auth.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetBlocksOutput>> GetBlocksAsync (this FishyFlip.ATProtocol atp, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Enumerates accounts which follow a specified account (actor).
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetFollowersOutput>> GetFollowersAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier actor, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Enumerates accounts which a specified account (actor) follows.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetFollowsOutput>> GetFollowsAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier actor, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Enumerates accounts which follow a specified account (actor) and are followed by the viewer.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetKnownFollowersOutput>> GetKnownFollowersAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier actor, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Gets a 'view' (with additional context) of a specified list.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetListOutput>> GetListAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATUri list, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get mod lists that the requesting account (actor) is blocking. Requires auth.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetListBlocksOutput>> GetListBlocksAsync (this FishyFlip.ATProtocol atp, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Enumerates mod lists that the requesting account (actor) currently has muted. Requires auth.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetListMutesOutput>> GetListMutesAsync (this FishyFlip.ATProtocol atp, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Enumerates the lists created by a specified account (actor).
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetListsOutput>> GetListsAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier actor, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Enumerates accounts that the requesting account (actor) currently has muted. Requires auth.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetMutesOutput>> GetMutesAsync (this FishyFlip.ATProtocol atp, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Enumerates public relationships between one account, and a list of other accounts. Does not require auth.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetRelationshipsOutput>> GetRelationshipsAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier actor, List<FishyFlip.Models.ATIdentifier>? others = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Gets a view of a starter pack.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetStarterPackOutput>> GetStarterPackAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATUri starterPack, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get views for a list of starter packs.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetStarterPacksOutput>> GetStarterPacksAsync (this FishyFlip.ATProtocol atp, List<FishyFlip.Models.ATUri> uris, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Enumerates follows similar to a given account (actor). Expected use is to recommend additional accounts immediately after following one account.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.App.Bsky.Graph.GetSuggestedFollowsByActorOutput>> GetSuggestedFollowsByActorAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier actor, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Creates a mute relationship for the specified account. Mutes are private in Bluesky. Requires auth.
        /// </summary>
        public static Task<Result<Success>> MuteActorAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier actor, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Creates a mute relationship for the specified list of accounts. Mutes are private in Bluesky. Requires auth.
        /// </summary>
        public static Task<Result<Success>> MuteActorListAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATUri list, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Mutes a thread preventing notifications from the thread and any of its children. Mutes are private in Bluesky. Requires auth.
        /// </summary>
        public static Task<Result<Success>> MuteThreadAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATUri root, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Unmutes the specified account. Requires auth.
        /// </summary>
        public static Task<Result<Success>> UnmuteActorAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier actor, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Unmutes the specified list of accounts. Requires auth.
        /// </summary>
        public static Task<Result<Success>> UnmuteActorListAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATUri list, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Unmutes the specified thread. Requires auth.
        /// </summary>
        public static Task<Result<Success>> UnmuteThreadAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATUri root, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }

    }
}

