// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Tools.Ozone.Moderation
{

    /// <summary>
    /// tools.ozone.moderation Endpoint Group.
    /// </summary>
    public static class ModerationEndpoints
    {

       public const string EmitEvent = "/xrpc/tools.ozone.moderation.emitEvent";

       public const string GetEvent = "/xrpc/tools.ozone.moderation.getEvent";

       public const string GetRecord = "/xrpc/tools.ozone.moderation.getRecord";

       public const string GetRecords = "/xrpc/tools.ozone.moderation.getRecords";

       public const string GetRepo = "/xrpc/tools.ozone.moderation.getRepo";

       public const string GetRepos = "/xrpc/tools.ozone.moderation.getRepos";

       public const string QueryEvents = "/xrpc/tools.ozone.moderation.queryEvents";

       public const string QueryStatuses = "/xrpc/tools.ozone.moderation.queryStatuses";

       public const string SearchRepos = "/xrpc/tools.ozone.moderation.searchRepos";


        /// <summary>
        /// Take a moderation action on an actor.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Moderation.ModEventView>> EmitEventAsync (this FishyFlip.ATProtocol atp, ATObject @event, ATObject subject, FishyFlip.Models.ATDid createdBy, List<string>? subjectBlobCids = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get details about a moderation event.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Moderation.ModEventViewDetail>> GetEventAsync (this FishyFlip.ATProtocol atp, int id, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get details about a record.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Moderation.RecordViewDetail>> GetRecordAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATUri uri, string? cid = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get details about some records.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Moderation.GetRecordsOutput>> GetRecordsAsync (this FishyFlip.ATProtocol atp, List<FishyFlip.Models.ATUri> uris, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get details about a repository.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Moderation.RepoViewDetail>> GetRepoAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get details about some repositories.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Moderation.GetReposOutput>> GetReposAsync (this FishyFlip.ATProtocol atp, List<FishyFlip.Models.ATDid> dids, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// List moderation events related to a subject.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Moderation.QueryEventsOutput>> QueryEventsAsync (this FishyFlip.ATProtocol atp, List<string>? types = default, FishyFlip.Models.ATDid? createdBy = default, string? sortDirection = default, DateTime? createdAfter = default, DateTime? createdBefore = default, string? subject = default, List<string>? collections = default, string? subjectType = default, bool? includeAllUserRecords = default, int? limit = 50, bool? hasComment = default, string? comment = default, List<string>? addedLabels = default, List<string>? removedLabels = default, List<string>? addedTags = default, List<string>? removedTags = default, List<string>? reportTypes = default, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// View moderation statuses of subjects (record or repo).
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Moderation.QueryStatusesOutput>> QueryStatusesAsync (this FishyFlip.ATProtocol atp, bool? includeAllUserRecords = default, string? subject = default, string? comment = default, DateTime? reportedAfter = default, DateTime? reportedBefore = default, DateTime? reviewedAfter = default, DateTime? hostingDeletedAfter = default, DateTime? hostingDeletedBefore = default, DateTime? hostingUpdatedAfter = default, DateTime? hostingUpdatedBefore = default, List<string>? hostingStatuses = default, DateTime? reviewedBefore = default, bool? includeMuted = default, bool? onlyMuted = default, string? reviewState = default, List<string>? ignoreSubjects = default, FishyFlip.Models.ATDid? lastReviewedBy = default, string? sortField = default, string? sortDirection = default, bool? takendown = default, bool? appealed = default, int? limit = 50, List<string>? tags = default, List<string>? excludeTags = default, string? cursor = default, List<string>? collections = default, string? subjectType = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Find repositories based on a search term.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Tools.Ozone.Moderation.SearchReposOutput>> SearchReposAsync (this FishyFlip.ATProtocol atp, string? q = default, int? limit = 50, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }

    }
}

