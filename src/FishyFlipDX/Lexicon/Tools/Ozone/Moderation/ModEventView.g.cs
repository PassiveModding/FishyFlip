// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Tools.Ozone.Moderation
{
    public partial class ModEventView : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ModEventView"/> class.
        /// </summary>
        public ModEventView(long? id = default, ATObject? @event = default, ATObject? subject = default, List<string>? subjectBlobCids = default, FishyFlip.Models.ATDid? createdBy = default, DateTime? createdAt = default, string? creatorHandle = default, string? subjectHandle = default)
        {
            this.Id = id;
            this.Event = @event;
            this.Subject = subject;
            this.SubjectBlobCids = subjectBlobCids;
            this.CreatedBy = createdBy;
            this.CreatedAt = createdAt ?? DateTime.UtcNow;
            this.CreatorHandle = creatorHandle;
            this.SubjectHandle = subjectHandle;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ModEventView"/> class.
        /// </summary>
        public ModEventView()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ModEventView"/> class.
        /// </summary>
        public ModEventView(CBORObject obj)
        {
            if (obj["id"] is not null) this.Id = obj["id"].AsInt64Value();
            if (obj["event"] is not null) this.Event = obj["event"].ToATObject();
            if (obj["subject"] is not null) this.Subject = obj["subject"].ToATObject();
            if (obj["subjectBlobCids"] is not null) this.SubjectBlobCids = obj["subjectBlobCids"].Values.Select(n =>n.AsString()).ToList();
            if (obj["createdBy"] is not null) this.CreatedBy = obj["createdBy"].ToATDid();
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["creatorHandle"] is not null) this.CreatorHandle = obj["creatorHandle"].AsString();
            if (obj["subjectHandle"] is not null) this.SubjectHandle = obj["subjectHandle"].AsString();
        }

        [JsonPropertyName("id")]
        [JsonRequired]
        public long? Id { get; set; }

        [JsonPropertyName("event")]
        [JsonRequired]
        public ATObject? Event { get; set; }

        [JsonPropertyName("subject")]
        [JsonRequired]
        public ATObject? Subject { get; set; }

        [JsonPropertyName("subjectBlobCids")]
        [JsonRequired]
        public List<string>? SubjectBlobCids { get; set; }

        [JsonPropertyName("createdBy")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid? CreatedBy { get; set; }

        [JsonPropertyName("createdAt")]
        [JsonRequired]
        public DateTime? CreatedAt { get; set; } = DateTime.UtcNow;

        [JsonPropertyName("creatorHandle")]
        public string? CreatorHandle { get; set; }

        [JsonPropertyName("subjectHandle")]
        public string? SubjectHandle { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "tools.ozone.moderation.defs#modEventView";

        public const string RecordType = "tools.ozone.moderation.defs#modEventView";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Tools.Ozone.Moderation.ModEventView>(this, (JsonTypeInfo<Tools.Ozone.Moderation.ModEventView>)SourceGenerationContext.Default.ToolsOzoneModerationModEventView)!;
        }

        public static ModEventView FromJson(string json)
        {
            return JsonSerializer.Deserialize<Tools.Ozone.Moderation.ModEventView>(json, (JsonTypeInfo<Tools.Ozone.Moderation.ModEventView>)SourceGenerationContext.Default.ToolsOzoneModerationModEventView)!;
        }
    }
}

