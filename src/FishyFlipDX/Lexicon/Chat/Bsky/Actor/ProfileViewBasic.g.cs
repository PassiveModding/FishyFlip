// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Chat.Bsky.Actor
{
    public partial class ProfileViewBasic : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="ProfileViewBasic"/> class.
        /// </summary>
        public ProfileViewBasic()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="ProfileViewBasic"/> class.
        /// </summary>
        public ProfileViewBasic(CBORObject obj)
        {
            if (obj["did"] is not null) this.Did = obj["did"].ToATDid();
            if (obj["handle"] is not null) this.Handle = obj["handle"].ToATHandle();
            if (obj["displayName"] is not null) this.DisplayName = obj["displayName"].AsString();
            if (obj["avatar"] is not null) this.Avatar = obj["avatar"].AsString();
            if (obj["associated"] is not null) this.Associated = new App.Bsky.Actor.ProfileAssociated(obj["associated"]);
            if (obj["viewer"] is not null) this.Viewer = new App.Bsky.Actor.ViewerState(obj["viewer"]);
            if (obj["labels"] is not null) this.Labels = obj["labels"].Values.Select(n => n is not null ? new Com.Atproto.Label.Label(n) : null).ToList();
            if (obj["chatDisabled"] is not null) this.ChatDisabled = obj["chatDisabled"].AsBoolean();
        }

        [JsonPropertyName("did")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid? Did { get; set; }

        [JsonPropertyName("handle")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATHandleJsonConverter))]
        public FishyFlip.Models.ATHandle? Handle { get; set; }

        [JsonPropertyName("displayName")]
        public string? DisplayName { get; set; }

        [JsonPropertyName("avatar")]
        public string? Avatar { get; set; }

        [JsonPropertyName("associated")]
        public App.Bsky.Actor.ProfileAssociated? Associated { get; set; }

        [JsonPropertyName("viewer")]
        public App.Bsky.Actor.ViewerState? Viewer { get; set; }

        [JsonPropertyName("labels")]
        public List<Com.Atproto.Label.Label?>? Labels { get; set; }

        /// <summary>
        /// Set to true when the actor cannot actively participate in converations
        /// </summary>
        [JsonPropertyName("chatDisabled")]
        public bool? ChatDisabled { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "chat.bsky.actor.defs#profileViewBasic";

        public const string RecordType = "chat.bsky.actor.defs#profileViewBasic";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Chat.Bsky.Actor.ProfileViewBasic>(this, (JsonTypeInfo<Chat.Bsky.Actor.ProfileViewBasic>)SourceGenerationContext.Default.ChatBskyActorProfileViewBasic)!;
        }

        public static ProfileViewBasic FromJson(string json)
        {
            return JsonSerializer.Deserialize<Chat.Bsky.Actor.ProfileViewBasic>(json, (JsonTypeInfo<Chat.Bsky.Actor.ProfileViewBasic>)SourceGenerationContext.Default.ChatBskyActorProfileViewBasic)!;
        }
    }
}

