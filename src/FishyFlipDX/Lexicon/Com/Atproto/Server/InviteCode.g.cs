// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Com.Atproto.Server
{
    public partial class InviteCode : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="InviteCode"/> class.
        /// </summary>
        public InviteCode()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="InviteCode"/> class.
        /// </summary>
        public InviteCode(CBORObject obj)
        {
            if (obj["code"] is not null) this.Code = obj["code"].AsString();
            if (obj["available"] is not null) this.Available = obj["available"].AsInt64Value();
            if (obj["disabled"] is not null) this.Disabled = obj["disabled"].AsBoolean();
            if (obj["forAccount"] is not null) this.ForAccount = obj["forAccount"].AsString();
            if (obj["createdBy"] is not null) this.CreatedBy = obj["createdBy"].AsString();
            if (obj["createdAt"] is not null) this.CreatedAt = obj["createdAt"].ToDateTime();
            if (obj["uses"] is not null) this.Uses = obj["uses"].Values.Select(n => n is not null ? new Com.Atproto.Server.InviteCodeUse(n) : null).ToList();
        }

        [JsonPropertyName("code")]
        [JsonRequired]
        public string? Code { get; set; }

        [JsonPropertyName("available")]
        [JsonRequired]
        public long? Available { get; set; }

        [JsonPropertyName("disabled")]
        [JsonRequired]
        public bool? Disabled { get; set; }

        [JsonPropertyName("forAccount")]
        [JsonRequired]
        public string? ForAccount { get; set; }

        [JsonPropertyName("createdBy")]
        [JsonRequired]
        public string? CreatedBy { get; set; }

        [JsonPropertyName("createdAt")]
        [JsonRequired]
        public DateTime? CreatedAt { get; set; }

        [JsonPropertyName("uses")]
        [JsonRequired]
        public List<Com.Atproto.Server.InviteCodeUse?>? Uses { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "com.atproto.server.defs#inviteCode";

        public const string RecordType = "com.atproto.server.defs#inviteCode";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Com.Atproto.Server.InviteCode>(this, (JsonTypeInfo<Com.Atproto.Server.InviteCode>)SourceGenerationContext.Default.ComAtprotoServerInviteCode)!;
        }

        public static InviteCode FromJson(string json)
        {
            return JsonSerializer.Deserialize<Com.Atproto.Server.InviteCode>(json, (JsonTypeInfo<Com.Atproto.Server.InviteCode>)SourceGenerationContext.Default.ComAtprotoServerInviteCode)!;
        }
    }
}

