// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Com.Atproto.Identity
{

    /// <summary>
    /// com.atproto.identity Endpoint Group.
    /// </summary>
    public static class IdentityEndpoints
    {

       public const string GetRecommendedDidCredentials = "/xrpc/com.atproto.identity.getRecommendedDidCredentials";

       public const string RequestPlcOperationSignature = "/xrpc/com.atproto.identity.requestPlcOperationSignature";

       public const string ResolveHandle = "/xrpc/com.atproto.identity.resolveHandle";

       public const string SignPlcOperation = "/xrpc/com.atproto.identity.signPlcOperation";

       public const string SubmitPlcOperation = "/xrpc/com.atproto.identity.submitPlcOperation";

       public const string UpdateHandle = "/xrpc/com.atproto.identity.updateHandle";


        /// <summary>
        /// Describe the credentials that should be included in the DID doc of an account that is migrating to this service.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Identity.GetRecommendedDidCredentialsOutput>> GetRecommendedDidCredentialsAsync (this FishyFlip.ATProtocol atp, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Request an email with a code to in order to request a signed PLC operation. Requires Auth.
        /// </summary>
        public static Task<Result<Success>> RequestPlcOperationSignatureAsync (this FishyFlip.ATProtocol atp, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Resolves a handle (domain name) to a DID.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Identity.ResolveHandleOutput>> ResolveHandleAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATHandle handle, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Signs a PLC operation to update some value(s) in the requesting DID's document.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Identity.SignPlcOperationOutput>> SignPlcOperationAsync (this FishyFlip.ATProtocol atp, string? token = default, List<string>? rotationKeys = default, List<string>? alsoKnownAs = default, ATObject? verificationMethods = default, ATObject? services = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Validates a PLC operation to ensure that it doesn't violate a service's constraints or get the identity into a bad state, then submits it to the PLC registry
        /// </summary>
        public static Task<Result<Success>> SubmitPlcOperationAsync (this FishyFlip.ATProtocol atp, ATObject operation, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Updates the current account's handle. Verifies handle validity, and updates did:plc document if necessary. Implemented by PDS, and requires auth.
        /// </summary>
        public static Task<Result<Success>> UpdateHandleAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATHandle handle, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }

    }
}

