// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Com.Atproto.Admin
{

    /// <summary>
    /// com.atproto.admin Endpoint Group.
    /// </summary>
    public static class AdminEndpoints
    {

       public const string DeleteAccount = "/xrpc/com.atproto.admin.deleteAccount";

       public const string DisableAccountInvites = "/xrpc/com.atproto.admin.disableAccountInvites";

       public const string DisableInviteCodes = "/xrpc/com.atproto.admin.disableInviteCodes";

       public const string EnableAccountInvites = "/xrpc/com.atproto.admin.enableAccountInvites";

       public const string GetAccountInfo = "/xrpc/com.atproto.admin.getAccountInfo";

       public const string GetAccountInfos = "/xrpc/com.atproto.admin.getAccountInfos";

       public const string GetInviteCodes = "/xrpc/com.atproto.admin.getInviteCodes";

       public const string GetSubjectStatus = "/xrpc/com.atproto.admin.getSubjectStatus";

       public const string SearchAccounts = "/xrpc/com.atproto.admin.searchAccounts";

       public const string SendEmail = "/xrpc/com.atproto.admin.sendEmail";

       public const string UpdateAccountEmail = "/xrpc/com.atproto.admin.updateAccountEmail";

       public const string UpdateAccountHandle = "/xrpc/com.atproto.admin.updateAccountHandle";

       public const string UpdateAccountPassword = "/xrpc/com.atproto.admin.updateAccountPassword";

       public const string UpdateSubjectStatus = "/xrpc/com.atproto.admin.updateSubjectStatus";


        /// <summary>
        /// Delete a user account as an administrator.
        /// </summary>
        public static Task<Result<Success>> DeleteAccountAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Disable an account from receiving new invite codes, but does not invalidate existing codes.
        /// </summary>
        public static Task<Result<Success>> DisableAccountInvitesAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid account, string? note = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Disable some set of codes and/or all codes associated with a set of users.
        /// </summary>
        public static Task<Result<Success>> DisableInviteCodesAsync (this FishyFlip.ATProtocol atp, List<string>? codes = default, List<string>? accounts = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Re-enable an account's ability to receive invite codes.
        /// </summary>
        public static Task<Result<Success>> EnableAccountInvitesAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid account, string? note = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get details about an account.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Admin.AccountView>> GetAccountInfoAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get details about some accounts.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Admin.GetAccountInfosOutput>> GetAccountInfosAsync (this FishyFlip.ATProtocol atp, List<FishyFlip.Models.ATDid> dids, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get an admin view of invite codes.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Admin.GetInviteCodesOutput>> GetInviteCodesAsync (this FishyFlip.ATProtocol atp, string? sort = default, int? limit = 100, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get the service-specific admin status of a subject (account, record, or blob).
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Admin.GetSubjectStatusOutput>> GetSubjectStatusAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid? did = default, FishyFlip.Models.ATUri? uri = default, string? blob = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get list of accounts that matches your search query.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Admin.SearchAccountsOutput>> SearchAccountsAsync (this FishyFlip.ATProtocol atp, string? email = default, string? cursor = default, int? limit = 50, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Send email to a user's account email address.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Admin.SendEmailOutput>> SendEmailAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid recipientDid, string content, FishyFlip.Models.ATDid senderDid, string? subject = default, string? comment = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Administrative action to update an account's email.
        /// </summary>
        public static Task<Result<Success>> UpdateAccountEmailAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier account, string email, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Administrative action to update an account's handle.
        /// </summary>
        public static Task<Result<Success>> UpdateAccountHandleAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, FishyFlip.Models.ATHandle handle, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Update the password for a user account as an administrator.
        /// </summary>
        public static Task<Result<Success>> UpdateAccountPasswordAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, string password, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Update the service-specific admin status of a subject (account, record, or blob).
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Admin.UpdateSubjectStatusOutput>> UpdateSubjectStatusAsync (this FishyFlip.ATProtocol atp, ATObject subject, FishyFlip.Lexicon.Com.Atproto.Admin.StatusAttr takedown, FishyFlip.Lexicon.Com.Atproto.Admin.StatusAttr deactivated, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }

    }
}

