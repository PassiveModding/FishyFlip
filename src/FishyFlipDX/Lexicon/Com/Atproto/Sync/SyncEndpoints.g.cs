// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Com.Atproto.Sync
{

    /// <summary>
    /// com.atproto.sync Endpoint Group.
    /// </summary>
    public static class SyncEndpoints
    {

       public const string GetBlob = "/xrpc/com.atproto.sync.getBlob";

       public const string GetBlocks = "/xrpc/com.atproto.sync.getBlocks";

       public const string GetCheckout = "/xrpc/com.atproto.sync.getCheckout";

       public const string GetHead = "/xrpc/com.atproto.sync.getHead";

       public const string GetLatestCommit = "/xrpc/com.atproto.sync.getLatestCommit";

       public const string GetRecord = "/xrpc/com.atproto.sync.getRecord";

       public const string GetRepo = "/xrpc/com.atproto.sync.getRepo";

       public const string GetRepoStatus = "/xrpc/com.atproto.sync.getRepoStatus";

       public const string ListBlobs = "/xrpc/com.atproto.sync.listBlobs";

       public const string ListRepos = "/xrpc/com.atproto.sync.listRepos";

       public const string NotifyOfUpdate = "/xrpc/com.atproto.sync.notifyOfUpdate";

       public const string RequestCrawl = "/xrpc/com.atproto.sync.requestCrawl";


        /// <summary>
        /// Get a blob associated with a given account. Returns the full blob as originally uploaded. Does not require auth; implemented by PDS.
        /// </summary>
        public static Task<Result<Success>> GetBlobAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, string cid, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get data blocks from a given repo, by CID. For example, intermediate MST nodes, or records. Does not require auth; implemented by PDS.
        /// </summary>
        public static Task<Result<Success>> GetBlocksAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, List<string> cids, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// DEPRECATED - please use com.atproto.sync.getRepo instead
        /// </summary>
        public static Task<Result<Success>> GetCheckoutAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// DEPRECATED - please use com.atproto.sync.getLatestCommit instead
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Sync.GetHeadOutput>> GetHeadAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get the current commit CID & revision of the specified repo. Does not require auth.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Sync.GetLatestCommitOutput>> GetLatestCommitAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get data blocks needed to prove the existence or non-existence of record in the current version of repo. Does not require auth.
        /// </summary>
        public static Task<Result<Success>> GetRecordAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, string collection, string rkey, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Download a repository export as CAR file. Optionally only a 'diff' since a previous revision. Does not require auth; implemented by PDS.
        /// </summary>
        public static Task<Result<Success>> GetRepoAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, string? since = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get the hosting status for a repository, on this server. Expected to be implemented by PDS and Relay.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Sync.GetRepoStatusOutput>> GetRepoStatusAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// List blob CIDs for an account, since some repo revision. Does not require auth; implemented by PDS.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Sync.ListBlobsOutput>> ListBlobsAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATDid did, string? since = default, int? limit = 500, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Enumerates all the DID, rev, and commit CID for all repos hosted by this service. Does not require auth; implemented by PDS and Relay.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Sync.ListReposOutput>> ListReposAsync (this FishyFlip.ATProtocol atp, int? limit = 500, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Notify a crawling service of a recent update, and that crawling should resume. Intended use is after a gap between repo stream events caused the crawling service to disconnect. Does not require auth; implemented by Relay.
        /// </summary>
        public static Task<Result<Success>> NotifyOfUpdateAsync (this FishyFlip.ATProtocol atp, string hostname, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Request a service to persistently crawl hosted repos. Expected use is new PDS instances declaring their existence to Relays. Does not require auth.
        /// </summary>
        public static Task<Result<Success>> RequestCrawlAsync (this FishyFlip.ATProtocol atp, string hostname, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }

    }
}

