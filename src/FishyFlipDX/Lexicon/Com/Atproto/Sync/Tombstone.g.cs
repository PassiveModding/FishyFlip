// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Com.Atproto.Sync
{
    /// <summary>
    /// DEPRECATED -- Use #account event instead
    /// </summary>
    public partial class Tombstone : ATObject
    {

        /// <summary>
        /// Initializes a new instance of the <see cref="Tombstone"/> class.
        /// </summary>
        public Tombstone(long? seq = default, FishyFlip.Models.ATDid? did = default, DateTime? time = default)
        {
            this.Seq = seq;
            this.Did = did;
            this.Time = time;
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Tombstone"/> class.
        /// </summary>
        public Tombstone()
        {
        }


        /// <summary>
        /// Initializes a new instance of the <see cref="Tombstone"/> class.
        /// </summary>
        public Tombstone(CBORObject obj)
        {
            if (obj["seq"] is not null) this.Seq = obj["seq"].AsInt64Value();
            if (obj["did"] is not null) this.Did = obj["did"].ToATDid();
            if (obj["time"] is not null) this.Time = obj["time"].ToDateTime();
        }

        [JsonPropertyName("seq")]
        [JsonRequired]
        public long? Seq { get; set; }

        [JsonPropertyName("did")]
        [JsonRequired]
        [JsonConverter(typeof(FishyFlip.Tools.Json.ATDidJsonConverter))]
        public FishyFlip.Models.ATDid? Did { get; set; }

        [JsonPropertyName("time")]
        [JsonRequired]
        public DateTime? Time { get; set; }

        /// <summary>
        /// Gets the ATRecord Type.
        /// </summary>
        [JsonPropertyName("$type")]
        public override string Type => "com.atproto.sync.subscribeRepos#tombstone";

        public const string RecordType = "com.atproto.sync.subscribeRepos#tombstone";

        public override string ToJson()
        {
            return JsonSerializer.Serialize<Com.Atproto.Sync.Tombstone>(this, (JsonTypeInfo<Com.Atproto.Sync.Tombstone>)SourceGenerationContext.Default.ComAtprotoSyncTombstone)!;
        }

        public static Tombstone FromJson(string json)
        {
            return JsonSerializer.Deserialize<Com.Atproto.Sync.Tombstone>(json, (JsonTypeInfo<Com.Atproto.Sync.Tombstone>)SourceGenerationContext.Default.ComAtprotoSyncTombstone)!;
        }
    }
}

