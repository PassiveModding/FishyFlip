// <auto-generated />
// This file was generated by FFSourceGen.
// Do not modify this file.

#nullable enable

namespace FishyFlip.Lexicon.Com.Atproto.Repo
{

    /// <summary>
    /// com.atproto.repo Endpoint Group.
    /// </summary>
    public static class RepoEndpoints
    {

       public const string ApplyWrites = "/xrpc/com.atproto.repo.applyWrites";

       public const string CreateRecord = "/xrpc/com.atproto.repo.createRecord";

       public const string DeleteRecord = "/xrpc/com.atproto.repo.deleteRecord";

       public const string DescribeRepo = "/xrpc/com.atproto.repo.describeRepo";

       public const string GetRecord = "/xrpc/com.atproto.repo.getRecord";

       public const string ImportRepo = "/xrpc/com.atproto.repo.importRepo";

       public const string ListMissingBlobs = "/xrpc/com.atproto.repo.listMissingBlobs";

       public const string ListRecords = "/xrpc/com.atproto.repo.listRecords";

       public const string PutRecord = "/xrpc/com.atproto.repo.putRecord";

       public const string UploadBlob = "/xrpc/com.atproto.repo.uploadBlob";


        /// <summary>
        /// Apply a batch transaction of repository creates, updates, and deletes. Requires auth, implemented by PDS.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Repo.ApplyWritesOutput>> ApplyWritesAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier repo, List<ATObject> writes, bool? validate = default, string? swapCommit = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Create a single new repository record. Requires auth, implemented by PDS.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Repo.CreateRecordOutput>> CreateRecordAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier repo, string collection, ATObject record, string? rkey = default, bool? validate = default, string? swapCommit = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Delete a repository record, or ensure it doesn't exist. Requires auth, implemented by PDS.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Repo.DeleteRecordOutput>> DeleteRecordAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier repo, string collection, string rkey, string? swapRecord = default, string? swapCommit = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Get information about an account and repository, including the list of collections. Does not require auth.
        /// </summary>
        public static async Task<Result<FishyFlip.Lexicon.Com.Atproto.Repo.DescribeRepoOutput?>> DescribeRepoAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier repo, CancellationToken cancellationToken = default)
        {
            var url = $"{DescribeRepo}?repo={repo}";
            return await atp.Client.Get<FishyFlip.Lexicon.Com.Atproto.Repo.DescribeRepoOutput?>(url, SourceGenerationContext.Default.ComAtprotoRepoDescribeRepoOutput!, atp.Options.JsonSerializerOptions, cancellationToken, atp.Options.Logger);
        }


        /// <summary>
        /// Get a single record from a repository. Does not require auth.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Repo.GetRecordOutput>> GetRecordAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier repo, string collection, string rkey, string? cid = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Import a repo in the form of a CAR file. Requires Content-Length HTTP header to be set.
        /// </summary>
        public static Task<Result<Success>> ImportRepoAsync (this FishyFlip.ATProtocol atp, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Returns a list of missing blobs for the requesting account. Intended to be used in the account migration flow.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Repo.ListMissingBlobsOutput>> ListMissingBlobsAsync (this FishyFlip.ATProtocol atp, int? limit = 500, string? cursor = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// List a range of records in a repository, matching a specific collection. Does not require auth.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Repo.ListRecordsOutput>> ListRecordsAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier repo, string collection, int? limit = 50, string? cursor = default, bool? reverse = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Write a repository record, creating or updating it as needed. Requires auth, implemented by PDS.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Repo.PutRecordOutput>> PutRecordAsync (this FishyFlip.ATProtocol atp, FishyFlip.Models.ATIdentifier repo, string collection, string rkey, ATObject record, bool? validate = default, string? swapRecord = default, string? swapCommit = default, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }


        /// <summary>
        /// Upload a new blob, to be referenced from a repository record. The blob will be deleted if it is not referenced within a time window (eg, minutes). Blob restrictions (mimetype, size, etc) are enforced when the reference is created. Requires auth, implemented by PDS.
        /// </summary>
        public static Task<Result<FishyFlip.Lexicon.Com.Atproto.Repo.UploadBlobOutput>> UploadBlobAsync (this FishyFlip.ATProtocol atp, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException();
        }

    }
}

